pipeline {
    environment {
        REPO_URL = "https://github.com/benblasco/fedora-server-bootc"
        REPO_BRANCH = "main"
        IMAGE_NAME = "fedora-bootc-testserver"
        REGISTRY1 = "micro.lan:5000"
        REGISTRY2 = "nuc.lan:5000"
        DATESTAMP = sh(
                        script: """
                        date +%Y%m%d
                        """, returnStdout: true
                    )
    }
    agent { label 'fedora-server-bootc' }
    stages {
        stage('Identify build node') {
            steps {
                echo 'Identify build node'
                sh 'hostnamectl'
            }
        }
        stage('Clone Repo') {
            steps {
                echo 'Clone build repo'
                git url: REPO_URL, branch: REPO_BRANCH
            }
        }
        stage('Build the image') {
            steps {
                echo 'Build the Fedora Bootc Container'
                sh 'sudo podman build --pull=always -t ${REGISTRY1}/${IMAGE_NAME}:latest -t ${REGISTRY1}/${IMAGE_NAME}:${DATESTAMP} .'
            }
        }
        stage('Push to the container registry') {
            steps {
                echo 'Push the build to the registries'
                echo "Pushing image to registry ${REGISTRY1}"
                sh 'sudo podman push --tls-verify=false ${REGISTRY1}/${IMAGE_NAME}:latest'
                sh 'sudo podman push --tls-verify=false ${REGISTRY1}/${IMAGE_NAME}:${DATESTAMP}'
                echo "Pushing image to registry ${REGISTRY2}"
                sh 'sudo podman push --tls-verify=false ${REGISTRY1}/${IMAGE_NAME}:latest ${REGISTRY2}/${IMAGE_NAME}:latest'
                sh 'sudo podman push --tls-verify=false ${REGISTRY1}/${IMAGE_NAME}:${DATESTAMP} ${REGISTRY2}/${IMAGE_NAME}:${DATESTAMP}'
            }
        }
        stage('Clean up local images') {
            steps {
                echo 'Clean up local images'
                sh 'sudo podman image rm ${REGISTRY1}/${IMAGE_NAME}:latest'
                sh 'sudo podman image rm ${REGISTRY1}/${IMAGE_NAME}:${DATESTAMP}'
                sh 'sudo podman image prune -f'
            }
        }
    }
    //post {
        //always {
            //archiveArtifacts artifacts: 'fedora-server-bootc', fingerprint: true
            //mail to: 'team@example.com',
              //subject: "Librespot build result: ${currentBuild.fullDisplayName}",
              //body: "This is what we did ${env.BUILD_URL}"
        //}
    //}
}
